@using Zoekjaar.Web.Models
@using Zoekjaar.Web.Controllers

@{
	ViewBag.Title = "Search Job";
	var currentRoute = new RouteValueDictionary(this.ViewContext.RouteData.Values);
}

@model JobSearchModel

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="container">
		<div class="row">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.CurrentStatusId)
			</div>
			<div class="span3">
				@Html.DropDownListFor(_ => _.Criteria.CurrentStatusId, new SelectList(Model.CurrentStatus, "Id", "Name"))
				@Html.ValidationMessageFor(_ => _.Criteria.CurrentStatusId)
			</div>
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.Function)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.Function)
				@Html.ValidationMessageFor(_ => _.Criteria.Function)
			</div>
			<div class="span1">
				<input class="btn-u" type="submit" value="Search" />
			</div>
		</div>
		<div class="row">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.JobType)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.JobType)
				@Html.ValidationMessageFor(_ => _.Criteria.JobType)
			</div>
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.Sector)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.Sector)
				@Html.ValidationMessageFor(_ => _.Criteria.Sector)
			</div>
		</div>
		<div class="row">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.VisaStatusId)
			</div>
			<div class="span3">
				@Html.DropDownListFor(_ => _.Criteria.VisaStatusId, new SelectList(Model.VisaStatus, "Id", "Name"))
				@Html.ValidationMessageFor(_ => _.Criteria.VisaStatusId)
			</div>
		</div>
	</div>

	<div class="container">
		<div class="row">

			@{
	if (Model.Criteria.TotalRecords.HasValue)
	{
		if (Model.Jobs.Any())
		{ 

				<table class="table table-bordered">
					<thead>
						<tr>
							<th><small><strong>Job</strong></small></th>
							<th>Hiring/HR</th>
							<th>Start Date</th>
							<th>Candidates</th>
							<th></th>
						</tr>
					</thead>
					@foreach (var job in Model.Jobs)
	 {

						<tr>
							<td>
								<div>
									<h3>@Html.ActionLink(string.Format("{0}-{1}", job.JobType, job.Function), "JobDetail", "Company")</h3>
								</div>
								<div>
									<small>@Html.DisplayFor(_ => job.JobNumber)</small>
								</div>
								<div>
									<small>@Html.DisplayFor(_ => job.Sector)<i class="icon-asterisk"></i>@Html.DisplayFor(_ => job.City)</small>
								</div>
							</td>
							<td>
								<div>
									<small><strong>HM:</strong>@Html.DisplayFor(_ => job.HiringManager)</small>
								</div>
								<div>
									<small><strong>HR:</strong>@Html.DisplayFor(_ => job.HrManager)</small>
								</div>
							</td>
							<td><small>@Html.DisplayFor(_ => job.StartDate)</small></td>
							<td><small><span class="label label-inverse">@Html.DisplayFor(_ => job.CandidateCount)</span></small></td>
							<td>
								@if (job.CanApply)
		{ 

									<button id="apply-button" class="btn btn-mini btn-success">@Html.LabelFor(_ => job.CanApply)</button>
		}
		else
		{

									<span class="label label-info">Applied</span>	
		}
							</td>
						</tr>
	 }
				</table>



				<div class="pagination">
					<ul>
						@for (var i = 0; i < (Model.Criteria.TotalRecords / CompanyController.PageSize) + (Model.Criteria.TotalRecords % CompanyController.PageSize > 0 ? 1 : 0); i++)
	  {
		  currentRoute["pageNumber"] = i;

							<li><a href="@Url.Action("Search", currentRoute)">@(i + 1)</a></li>
	  }
					</ul>
					<div class="alert alert-success">
						We found
					
						<strong>@Model.Criteria.TotalRecords</strong>
						matches.
				
					</div>
				</div>
		}
		else
		{

				<div class="alert alert-info">
					<strong>Ooops!</strong>
					We found <strong>0</strong> matches.
			
				</div>
		}
	}
	}
		</div>
	</div>
}
