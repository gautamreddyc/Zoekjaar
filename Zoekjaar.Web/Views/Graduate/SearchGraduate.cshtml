@using Zoekjaar.Web.Models
@using Zoekjaar.Web.Controllers
@model GraduateSearchModel

@{
	var currentRoute = new RouteValueDictionary(this.ViewContext.RouteData.Values);
}
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	<div class="container">
		<div class="row">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.CurrentStatusId)
			</div>
			<div class="span3">
				@Html.DropDownListFor(_ => _.Criteria.CurrentStatusId, new SelectList(Model.CurrentStatus, "Id", "Name"))
				@Html.ValidationMessageFor(_ => _.Criteria.CurrentStatusId)
			</div>
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.Function)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.Function)
				@Html.ValidationMessageFor(_ => _.Criteria.Function)
			</div>
			<div class="span1">
				<input class="btn btn-primary" type="submit" value="Search" />
			</div>
		</div>
		<div class="row">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.JobType)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.JobType)
				@Html.ValidationMessageFor(_ => _.Criteria.JobType)
			</div>
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.Sector)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.Sector)
				@Html.ValidationMessageFor(_ => _.Criteria.Sector)
			</div>
		</div>
		<div class="row">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.VisaStatusId)
			</div>
			<div class="span3">
				@Html.DropDownListFor(_ => _.Criteria.VisaStatusId, new SelectList(Model.VisaStatus, "Id", "Name"))
				@Html.ValidationMessageFor(_ => _.Criteria.VisaStatusId)
			</div>
		</div>
	</div>
	
	<div class="container">
		<div class="row">

			@{
	if (Model.Criteria.TotalRecords.HasValue)
	{
		if (Model.Graduates.Any())
		{ 
				<table class="table table-bordered">
					<tr>
						<th>Name
						</th>
					</tr>
					@foreach (var graduate in Model.Graduates)
	 {
		 currentRoute["id"] = graduate.GraduateId;
						<tr>
							<td><a href="@Url.Action("ViewProfile", "Graduate", currentRoute)">@graduate.Name</a></td>
						</tr>
	 }
				</table>


	 if (Model.Criteria.TotalRecords / CompanyController.PageSize + (Model.Criteria.TotalRecords % CompanyController.PageSize > 0 ? 1 : 0) > 1)
	 {
		
		
				<div class="pagination">
					<ul>
						@for (var i = 0; i < (Model.Criteria.TotalRecords / CompanyController.PageSize) + (Model.Criteria.TotalRecords % CompanyController.PageSize > 0 ? 1 : 0); i++)
	  {
		  currentRoute["pageNumber"] = i;
							<li><a href="@Url.Action("SearchGraduate", currentRoute)">@(i + 1)</a></li>
	  }
					</ul>
					<div class="alert alert-success">
						We found
						<strong>@Model.Criteria.TotalRecords</strong>
						matches.
					</div>
				</div>
	 }
		}
		else
		{
				<div class="alert alert-info">
					<strong>Ooops!</strong>
					We found <strong>0</strong> matches.
				</div>
		}
	}
			}
		</div>
	</div>
}
