@using Zoekjaar.Web.Models
@using Zoekjaar.Web.Extensions

@model GraduateProfileModel
@{
	ViewBag.Title = "My Profile";
}

<div class="body">
	<div class="container">
		<div class="row-fluid margin-bottom-10">
			<div class="span8">
				@using (Html.BeginForm())
	{ 
					@Html.HiddenFor(_ => _.Graduate.Id)
					@Html.HiddenFor(_ => _.Graduate.UserId)
					@Html.HiddenFor(_ => _.Graduate.IsActive)
					<div class="controls">
						<div class="span12">
							@Html.Label("Email")
							@Html.TextBox("Email", Model.Graduate.User.Username, new { @class = "span6", @readonly = "readonly" })
						</div>
					</div>
					<div class="controls">
						<div class="span6">
							@Html.LabelFor(_ => _.Graduate.FirstName)
							@Html.TextBoxFor(_ => _.Graduate.FirstName, new { @class = "span12" })
						</div>
						<div class="span6">
							@Html.LabelFor(_ => _.Graduate.LastName)
							@Html.TextBoxFor(_ => _.Graduate.LastName, new { @class = "span12" })
						</div>
					</div>
					<div class="controls">
						<div class="span6">
							@Html.LabelFor(_ => _.Graduate.CurrentStatusId)
							@Html.DropDownListFor(_ => _.Graduate.CurrentStatusId, new SelectList(Model.CurrentStatus, "Id", "Name"), new { @class = "span12" })
						</div>
						<div class="span6">
							@Html.LabelFor(_ => _.Graduate.VisaStatusId)
							@Html.DropDownListFor(_ => _.Graduate.VisaStatusId, new SelectList(Model.VisaStatus, "Id", "Name"), new { @class = "span12" })
						</div>
					</div>
					<div class="controls">
						<div class="span12">
							@Html.LabelFor(_ => _.Graduate.AvailableFromDate)
							@Html.TextBoxFor(_ => _.Graduate.AvailableFromDate, new { @class = "date-picker span6" })
						</div>
					</div>
					<div class="controls">
						<div class="span12">
							@Html.Label("editor", "Profile")
							@Html.Partial("_HtmlEditor", new HtmlEditorModel
  {
	  Id = "editor",
	  ModelId = "Graduate_Profile",
	  Content = Model.Graduate.Profile
  })
							@Html.HiddenFor(_ => _.Graduate.Profile)
						</div>
					</div>
				
@*<div class="accordion" id="accordion">
					<div class="accordion-group">
						<div class="accordion-heading">
							<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#degree-accordion">Degrees
							</a>
						</div>
						<div id="degree-accordion" class="accordion-body collapse in">
							<div class="accordion-inner">
								<div class="row-fluid">
									<div class="span6">
										<button class="btn btn-inverse btn-mini command save" data-group="degree" data-target="degrees" data-container="add-degree-container">Save</button>
										<button class="btn btn-inverse btn-mini command save-and-add" data-group="degree" data-target="degrees" data-container="add-degree-container">Save & Add another degree</button>
										<button class="btn btn-inverse btn-mini command add" data-group="degree" data-target="degrees" data-container="add-degree-container">Add another degree</button>
									</div>
								</div>
								<div id="add-degree-container">
									<div class="row-fluid">
										<div class="span3">
											<div class="control-group">
												@Html.LabelFor(_ => _.Degree.University)
												<div class="controls">
													<input type="text" class="element" data-name="Graduate.GraduateDegrees[{0}].University" />
												</div>
											</div>
										</div>
										<div class="span3">
											<div class="control-group">
												@Html.LabelFor(_ => _.Degree.Degree)
												<div class="controls">
													<input type="text" class="element" data-name="Graduate.GraduateDegrees[{0}].Degree" />
												</div>
											</div>
										</div>
									</div>
									<div class="row-fluid">
										<div class="span3">
											<div class="control-group">
												@Html.LabelFor(_ => _.Degree.Specialisation)
												<div class="controls">
													<input type="text" class="element" data-name="Graduate.GraduateDegrees[{0}].Specialisation" />
												</div>
											</div>
										</div>
									</div>
								</div>
								<hr />
								<div id="degrees">
									@{
	   var i = 0;
	   foreach (var degree in Model.Graduate.GraduateDegrees)
	   {
		   var university = string.Format("Graduate.GraduateDegrees[{0}].University", i);
		   var d = string.Format("Graduate.GraduateDegrees[{0}].Degree", i);
		   var specialisation = string.Format("Graduate.GraduateDegrees[{0}].Specialisation", i);
		   var id = string.Format("Graduate.GraduateDegrees[{0}].Id", i);
		   var graduateId = string.Format("Graduate.GraduateDegrees[{0}].GraduateId", i);
										@Html.Hidden(id, degree.Id)
										@Html.Hidden(graduateId, degree.GraduateId)
										<div class="row-fluid">
											<div class="span3">
												<div class="control-group">
													@Html.Label(university, "University/College", new { @class = "control-label" })
													<div class="controls">
														<input readonly="readonly" type="text" class="element" name="@university" value="@degree.University" />
													</div>
												</div>
											</div>
											<div class="span3">
												<div class="control-group">
													@Html.Label(d, "Degree Obtained", new { @class = "control-label" })
													<div class="controls">
														<input readonly="readonly" type="text" class="element" name="@d" value="@degree.Degree" />
													</div>
												</div>
											</div>
										</div>
										<div class="row-fluid">
											<div class="span3">
												<div class="control-group">
													@Html.Label(specialisation, "Specialisation", new { @class = "control-label" })
													<div class="controls">
														<input readonly="readonly" type="text" class="element" name="@specialisation" value="@degree.Specialisation" />
													</div>
												</div>
											</div>
										</div>
		   i++;
	   }
									}
								</div>
							</div>
						</div>
					</div>

					<div class="accordion-group">
						<div class="accordion-heading">
							<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#language-accordion">Languages
							</a>
						</div>
						<div id="language-accordion" class="accordion-body collapse">
							<div class="accordion-inner">
								<div id="add-language-container">
									<div class="row-fluid">
										<div class="span3">
											<div class="control-group">
												@Html.LabelFor(_ => _.Language.Language)
												<div class="controls">
													<input type="text" class="element" data-name="Graduate.GraduateLanguages[{0}].Language" />
												</div>
											</div>
										</div>
										<div class="span3">
											<div class="control-group">
												@Html.LabelFor(_ => _.Language.Proficiency)
												<div class="controls">
													@Html.DropDownList("languages-dropdown", new SelectList(Model.Proficiencies, "Id", "Name"), new { @class = "element", dataname = "Graduate.GraduateLanguages[{0}].ProficiencyId" })
												</div>
											</div>
										</div>
									</div>
								</div>
								<div class="row-fluid">
									<div class="span3">
										<button class="btn btn-inverse btn-mini command save" data-group="language" data-target="languages" data-container="add-language-container">Save</button>
										<button class="btn btn-inverse btn-mini command save-and-add" data-group="language" data-target="languages" data-container="add-language-container">Save & Add another Language</button>
									</div>
								</div>
								<div id="languages">
									@{
	   i = 0;
	   foreach (var language in Model.Graduate.GraduateLanguages)
	   {
										<div class="container-fluid">
											<div class="row-fluid">
												<div class="span3">
													<div class="control-group">
														@Html.Label("Language", new { @class = "control-label" })
														<div class="controls">
															<input type="text" readonly="readonly" class="element" name="Graduate.GraduateLanguages[@i].Language" value="@language.Language" />
														</div>
													</div>
												</div>
												<div class="span3">
													<div class="control-group">
														@Html.Label("Profiency", new { @class = "control-label" })
														<div class="controls">
															<input type="text" class="element" name="Graduate.GraduateLanguages[@i].ProficiencyId" value="@language.ProficiencyId" />
														</div>
													</div>
												</div>
											</div>
										</div>
		   i++;
	   }
									}
								</div>
								<div class="row-fluid">
									<button id="add-language" class="btn btn-inverse btn-mini command add" data-group="language" data-target="languages" data-container="add-language-container">Add another Language</button>
								</div>
								<div class="row-fluid">
									<div class="control-group">
										@Html.LabelFor(_ => _.Graduate.PcSkills)
										<div class="controls">
											@Html.TextAreaFor(_ => _.Graduate.PcSkills, new { row = 3, @class = "input-xxlarge" })
										</div>
									</div>
								</div>
								<div class="row-fluid">
									<div class="control-group">
										@Html.LabelFor(_ => _.Graduate.OtherSkills)
										<div class="controls">
											@Html.TextAreaFor(_ => _.Graduate.OtherSkills, new { row = 3, @class = "input-xxlarge" })
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="accordion-group">
						<div class="accordion-heading">
							<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#experience-accordion">Experiences
							</a>
						</div>
						<div id="experience-accordion" class="accordion-body collapse">
							<div class="accordion-inner">
								<div id="add-experience-container">
									<div class="row-fluid">
										<div class="control-group">
											@Html.LabelFor(_ => _.Experience.CompanyName)
											<div class="controls">
												<input type="text" class="element span5" data-name="Graduate.GraduateExperiences[{0}].CompanyName" />
											</div>
										</div>
									</div>
									<div class="row-fluid">
										<div class="control-group">
											@Html.LabelFor(_ => _.Experience.CompanyProfile)
											<div class="controls">
												<input type="text" class="element span5" data-name="Graduate.GraduateExperiences[{0}].CompanyProfile" />
											</div>
										</div>
									</div>
									<div class="row-fluid">
										<div class="control-group">
											@Html.LabelFor(_ => _.Experience.Experience)
											<div class="controls">
												<textarea id="experience-textarea" rows="3" class="element input-xxlarge" data-name="Graduate.GraduateExperiences[{0}].Experience"></textarea>
											</div>
										</div>
									</div>
								</div>
								<div class="row-fluid">
									<div class="span3">
										<button class="btn btn-inverse btn-mini command save" data-group="experience" data-target="experiences" data-container="add-experience-container" href="#">Save</button>
										<button class="btn btn-inverse btn-mini command save-and-add" data-group="experience" data-target="experiences" data-container="add-experience-container" href="#">Save & Add another experience</button>
									</div>
								</div>
								<div id="experiences">
									@{
	   i = 0;
	   foreach (var experience in Model.Graduate.GraduateExperiences)
	   {
										<div class="row-fluid">
											<div class="control-group">
												@Html.Label("Company Name", new { @class = "control-label" })
												<div class="controls">
													<input readonly="readonly" type="text" class="element" name="Graduate.GraduateExperiences[@i].CompanyName" value="@experience.CompanyName" />
												</div>
											</div>
										</div>
										<div class="row-fluid">
											<div class="control-group">
												@Html.Label("Profile", new { @class = "control-label" })
												<div class="controls">
													<input readonly="readonly" type="text" class="element" name="Graduate.GraduateExperiences[@i].CompanyProfile" value="@experience.CompanyProfile" />
												</div>
											</div>
										</div>
										<div class="row-fluid">
											<div class="control-group">
												@Html.Label("Specialisation", new { @class = "control-label" })
												<div class="controls">
													<textarea readonly="readonly" rows="3" class="element input-xxlarge" name="Graduate.GraduateExperiences[@i].Experience">@experience.Experience</textarea>
												</div>
											</div>
										</div>
		   i++;
	   }
									}
								</div>
								<div class="row-fluid">
									<div class="span3">
										<button class="btn btn-inverse btn-mini command add" data-group="experience" data-target="experiences" data-container="add-experience-container">Add another experience</button>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="accordion-group">
						<div class="accordion-heading">
							<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#other-accordion">Other Links
							</a>
						</div>
						<div id="other-accordion" class="accordion-body collapse">
							<div class="accordion-inner">
								<div class="row-fluid">
									<div class="control-group">
										@Html.LabelFor(_ => _.Graduate.LinkedIn)
										<div class="controls">
											@Html.TextBoxFor(_ => _.Graduate.LinkedIn)
											@Html.ValidationMessageFor(_ => _.Graduate.LinkedIn)
										</div>
									</div>
								</div>
								<div class="row-fluid">
									<div class="control-group">
										@Html.LabelFor(_ => _.Graduate.GooglePlus)
										<div class="controls">
											@Html.TextBoxFor(_ => _.Graduate.GooglePlus)
											@Html.ValidationMessageFor(_ => _.Graduate.GooglePlus)
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>*@
					<input id="save" type="submit" class="btn-u" value="Save" />
	}
			</div>
		</div>
	</div>
</div>

@section scripts{
	@Scripts.Render("~/bundles/wysiwyg")
}
