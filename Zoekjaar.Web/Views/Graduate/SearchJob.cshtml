@using Zoekjaar.Web.Models
@using Zoekjaar.Web.Controllers

@{
	ViewBag.Title = "Search Job";
	var currentRoute = new RouteValueDictionary(this.ViewContext.RouteData.Values);
}

@model JobSearchModel

<div class="container">
	@using (Html.BeginForm())
 {
		@Html.AntiForgeryToken()

		<div class="row-fluid">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.CurrentStatusId)
			</div>
			<div class="span3">
				@Html.DropDownListFor(_ => _.Criteria.CurrentStatusId, new SelectList(Model.CurrentStatus, "Id", "Name"))
				@Html.ValidationMessageFor(_ => _.Criteria.CurrentStatusId)
			</div>
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.Function)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.Function)
				@Html.ValidationMessageFor(_ => _.Criteria.Function)
			</div>
			<div class="span1">
				<input class="btn-u" type="submit" value="Search" />
			</div>
		</div>
		<div class="row">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.JobType)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.JobType)
				@Html.ValidationMessageFor(_ => _.Criteria.JobType)
			</div>
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.Sector)
			</div>
			<div class="span3">
				@Html.TextBoxFor(_ => _.Criteria.Sector)
				@Html.ValidationMessageFor(_ => _.Criteria.Sector)
			</div>
		</div>
		<div class="row">
			<div class="span2">
				@Html.LabelFor(_ => _.Criteria.VisaStatusId)
			</div>
			<div class="span3">
				@Html.DropDownListFor(_ => _.Criteria.VisaStatusId, new SelectList(Model.VisaStatus, "Id", "Name"))
				@Html.ValidationMessageFor(_ => _.Criteria.VisaStatusId)
			</div>
		</div>

		<div class="row-fluid search-page">

			@{
	 if (Model.Criteria.TotalRecords.HasValue)
	 {
		 if (Model.Jobs.Any())
		 {
				<div class="alert alert-success">
					We found
					
						<strong>@Model.Criteria.TotalRecords</strong>
					matches.
				
				</div>
	   
			 foreach (var job in Model.Jobs)
			 {
				 currentRoute["id"] = job.JobId;
				<div class="row-fluid">
					<div class="span12 booking-blocks">
						<div class="pull-left booking-img">
							<img src="assets/img/new/img1.jpg" alt="">
							<ul class="unstyled">
								<li><i class="icon-user"></i>Hiring: @Html.DisplayFor(_ => job.HiringManager)</li>
								<li><i class="icon-user"></i>HR: @Html.DisplayFor(_ => job.HrManager)</li>
								<li><i class="icon-briefcase"></i>@Html.DisplayFor(_ => job.CompanyName)</li>
								@if (!string.IsNullOrEmpty(job.City))
		{ 
									<li><i class="icon-map-marker"></i>@Html.DisplayFor(_ => job.City)</li>
		}
							</ul>
						</div>
						<div style="overflow: hidden;">
							
							<h2>@Html.ActionLink(string.Format("{0}-{1}", job.JobType, job.Function), "JobDetail", "Company")</h2>
							<p>@Html.DisplayFor(_ => job.Description) <a href="@Url.Action("ViewJob", "Company", currentRoute)">read more</a></p>
							@if (job.CanApply)
	   { 

								<button id="apply-button" class="btn-u btn-mini apply" data-target-url="@Url.Action("Apply", currentRoute)">@Html.LabelFor(_ => job.CanApply)</button>
	   }
	   else
	   {

								<span class="label label-info">Applied</span>
	   }
						</div>
					</div>
				</div>
			 }
				<div class="pagination">
					<ul>
						@for (var i = 0; i < (Model.Criteria.TotalRecords / CompanyController.PageSize) + (Model.Criteria.TotalRecords % CompanyController.PageSize > 0 ? 1 : 0); i++)
	  {
		  currentRoute["pageNumber"] = i;

							<li><a href="@Url.Action("SearchJob", currentRoute)">@(i + 1)</a></li>
	  }
					</ul>
				</div>
		 }
		 else
		 {

				<div class="alert alert-info">
					<strong>Ooops!</strong>
					We found <strong>0</strong> matches.
			
				</div>
		 }
	 }
			}
		</div>
 }
</div>
